help(apply)
help(lapply)
n * integrate(lapply(t,f) , - Inf, Inf)
n * integrate(function(t) lapply(t,f) , - Inf, Inf)
lapply(1:20,f)
f <- function(t) apply(t, abs(mean(t*1i*y) - exp(-abs(t)) )^2 *exp(-l *abs(t)))
lapply(1:20,f)
f(20)
f
f <- function(t) abs(mean(t*1i*y) - exp(-abs(t)) )^2 *exp(-l *abs(t))
f(20)
f
lapply(1:20,f)
n * integrate(function(t) lapply(t,f) , - Inf, Inf)
n * integrate(function(t) sapply(t,f) , - Inf, Inf)
n * integrate(g = function(t) ((mean(t*1i*y) - exp(-abs(t)) )^2 *exp(-l *abs(t))), lower = - Inf, upper = Inf)
n * integrate(g = function(t) sapply(t,((mean(t*1i*y) - exp(-abs(t)) )^2 *exp(-l *abs(t)))), lower = - Inf, upper = Inf)
n * integrate(f = function(t) sapply(t,((mean(t*1i*y) - exp(-abs(t)) )^2 *exp(-l *abs(t)))), lower = - Inf, upper = Inf)
integrate(function(t) sapply(t,f) , - Inf, Inf)
n * integrate(function(t) sapply(t,f) , - Inf, Inf)
n * integrate(function(t) sapply(t,f) , - Inf, Inf)$value
n * integrate(function(t) abs(mean(t*1i*y) - exp(-abs(t)) )^2 *exp(-l *abs(t)) , - Inf, Inf)$value
n * integrate(f = function(t) abs(mean(t*1i*y) - exp(-abs(t)) )^2 *exp(-l *abs(t)) , - Inf, Inf)$value
integrate(function(t) sapply(t,f) , - Inf, Inf)
n* integrate(function(t) sapply(t,f) , - Inf, Inf)$value
D
D(y,l)
n * integrate(f = function(t) abs(mean(t*1i*y) - exp(-abs(t)) )^2 *exp(-l *abs(t)) , - Inf, Inf)$value
n* integrate(function(t) sapply(t,f) , - Inf, Inf)$value
f <- function(t) abs(mean(t*1i*y) - exp(-abs(t)) )^2 *exp(-l *abs(t))
n* integrate(function(t) sapply(t,f) , - Inf, Inf)$value
D(y,l)
f <- function(t) abs(sum(t*1i*y)/n - exp(-abs(t)) )^2 *exp(-l *abs(t))
n* integrate(function(t) sapply(t,f) , - Inf, Inf)$value
d
D
f <- function(t) abs(sum(t*1i*y)/n - exp(-abs(t)) )^2 *exp(-l *abs(t))
n* integrate(function(t) sapply(t,f) , - Inf, Inf)$value
D(y,l)
2*1i*y
sum(2*1i*y)
sum(2*1i*y)/n
t=2
abs(sum(t*1i*y)/n - exp(-abs(t)) )^2
abs(sum(t*1i*y)/n - exp(-abs(t)) )^2 *exp(-l *abs(t))
y=rcauchy(20)
n=length(y)
f <- function(t) abs(sum(t*1i*y)/n - exp(-abs(t)) )^2 *exp(-l *abs(t))
n* integrate(function(t) sapply(t,f) , - Inf, Inf)$value
D(y,l)
D
n* integrate(function(t) sapply(t,f) , -Inf, Inf)$value
f <- function(t) abs(sum(exp(t*1i*y))/n - exp(-abs(t)) )^2 *exp(-l *abs(t))
n* integrate(function(t) sapply(t,f) , -Inf, Inf)$value
exp(t*1i*y)
sum(exp(t*1i*y))/n
abs(sum(exp(t*1i*y))/n - exp(-abs(t)) )^2 *exp(-l *abs(t))
n* integrate(function(t) sapply(t,f) , -Inf, Inf)$value
y=rcauchy(20)
n* integrate(function(t) sapply(t,f) , -Inf, Inf)$value
D(y,l)
y = rep(20,1)
y = rep(20,20)
y
n* integrate(function(t) sapply(t,function(t) abs(sum(exp(t*1i*y))/n - exp(-abs(t)) )^2 *exp(-l *abs(t))) , -Inf, Inf)$value
g(y,l) <- n* integrate(function(t) sapply(t,function(t) abs(sum(exp(t*1i*y))/n - exp(-abs(t)) )^2 *exp(-l *abs(t))) , -Inf, Inf)$value
g <-function(y,l) n* integrate(function(t) sapply(t,function(t) abs(sum(exp(t*1i*y))/n - exp(-abs(t)) )^2 *exp(-l *abs(t))) , -Inf, Inf)$value
g(y,l)
D(y,l)
library(tfc)
library(tfc)
# usethis::use_vignette("my-vignette")
# install.packages("rmarkdown")
# library(rmarkdown)
#usethis::use_testthat()
test_that(D)
testthat::test_that(D)
testthat::test_that(Test that D computes the right value,expect_equal(D(y,l), n* integrate(function(t) sapply(t,f) , -Inf, Inf)$value))
testthat::test_that("Test that D computes the right value",expect_equal(D(y,l), n* integrate(function(t) sapply(t,f) , -Inf, Inf)$value))
testthat::test_that("Test that D computes the right value", expect_equal(D(y,l), n* integrate(function(t) sapply(t,f) , -Inf, Inf)$value))
library("testthat", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
test_that("Test that D computes the right value", expect_equal(D(y,l), n* integrate(function(t) sapply(t,f) , -Inf, Inf)$value))
library(tfc)
source('~/Documents/ILIAS/R-Packages/tfc/tests/test-D.R', echo=TRUE)
library(tfc)
library(tfc)
library(tfc)
quantile_D_Median
quantile_T1_Median
help("quantile_D_Median")
library(tfc)
library(tfc)
library(tfc)
library(tfc)
library(tfc)
library(tfc)
library(tfc)
library(tfc)
library(tfc)
use_package(stats)
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("roxygen2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("testthat", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
use_package(stats)
use_package("stats)
use_package("stats")
library(tfc)
library(tfc)
library(tfc)
library(tfc)
help(stats)
library(tfc)
library(tfc)
?D
library(tfc)
library(tfc)
?D
library(tfc)
?AD
?ml_est
?tfc
?quantile_D_Median
?txtProgressBar()
library(tfc)
library(tfc)
library(tfc)
library(tfc)
?ks.test
ks.test(rcauchy(20),pcauchy)
type(ks.test(rcauchy(20),pcauchy))
class(ks.test(rcauchy(20),pcauchy))
?htest
??htest
a <- ks.test(rcauchy(20),pcauchy)
isS3method(a)
isS3method(ks.test)
isS4(a)
print.htest
print(a)
class(a)
method(print)
methods(print)
print.htest*
?methods
methods(class=htest)
methods(class="htest")
file.exists("~/.ssh/id_rsa.pub")
library(tfc)
library(tfc)
library(tfc)
library(tfc)
D_Henze(c(1,2,3,4),0.025)
library(tfc)
?rstable
distr("Stable(2,1)",20)
y <- distr("Stable(2,1)",20)
y <- distr(20,"Stable(2,1)")
use_package("actuar")
library(`actuar`)
y <- distr(20,"Stable(2,1)")
library(`stabledist`)
y <- distr(20,"Stable(2,1)")
stabledist::rstable(20,1,1)
library(tfc)
y <- distr(20,"Stable(2,1)")
rstable(20,1,1)
stabledist::rstable(20,1,1)
library(tfc)
??rlaplace
library(tfc)
library(tfc)
library(tfc)
library(tfc)
library(tfc)
load("~/Documents/ILIAS/R-Packages/tfc/data/quantile_T1_ML.RData")
view(quantile_T1_Median)
View(quantile_T1_Median)
View(quantile_KL_Median)
View(quantile_edf_Median)
library(tfc)
library(tfc)
library(tfc)
install.packages("sloop")
library(sloop)
sloop::otype(ks.test)
ks.test
y <- ks.test(rnorm(20),pnorm)
y
otype(y)
y$statistic
?in
??in
??test
x <- c("D_Henze", "KL", "W", "AD", "CM", "KS", "T1", "T2", "T3", "T4")
x[x="KL"]
x[x=="KL"]
x=="KL"
x[x=="AD"]
x[x=="A"]
x[x="AD"]
x[x=="AD"]
library(tfc)
library(tfc)
cauchy.test("D_Henze", rcauchy(20))
n = length(rcauchy(20))
n
n!= 20
library(tfc)
n = length(rcauchy(20))
cauchy.test("D_Henze", rcauchy(20))
n!= 20
n!=10
library(tfc)
cauchy.test("D_Henze", rcauchy(20))
y
library(tfc)
cauchy.test("D_Henze", rcauchy(20))
library(tfc)
library(tfc)
cauchy.test("D_Henze", rcauchy(20))
x <- rcauchy(20)
x
median_est(x)
cauchy.test("D_Henze", x
)
standardisiert(x,1)
#' @export
D_Henze(standardisiert(x,1),5)
cauchy.test("D_Henze", x)
library(tfc)
cauchy.test("D_Henze", x)
library(tfc)
cauchy.test("D_Henze", x)
library(tfc)
cauchy.test("D_Henze", x)
result <- cauchy.test("D_Henze", rcauchy(20))
result$decision
result <- cauchy.test("D_Henze", rcauchy(20))
result$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
View(quantile_D_Median)
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
load("/Users/lucasbutsch/Documents/ILIAS/Bachelorarbeit/Server Daten final/quantile_D_Median.RData")
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
View(quantile_D_Median)
cauchy.test("D_Henze", rcauchy(20))$decision
View(quantile_D_Median)
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
cauchy.test("D_Henze", rcauchy(20))$decision
View(quantile_D_Median)
cauchy.test("D_Henze", x$decision
cauchy.test("D_Henze", x)$decision
cauchy.test("D_Henze", x)$decision
cauchy.test("T1", x)$decision
cauchy.test("AD", x)$decision
cauchy.test("AD", x)$decision
cauchy.test("W", x)$decision
cauchy.test("KS", x)$decision
?cat
y
library(tfc)
asd <- cauchy.test("W", x)
asd
asd
library(tfc)
asd <- cauchy.test("W", x)
asd
y
D_Henze(x <- standardisiert(rcauchy(20),1),5)
x
D_Henze(x <- standardisiert(rcauchy(20),1),5)
x
library(tfc)
asd <- cauchy.test("W", x)
asd
?pcauchy
library(tfc)
cauchy.test("T2", rcauchy(20))
cauchy.test("T2", rcauchy(20))
cauchy.test("T2", rcauchy(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", runif(50))
cauchy.test("T2", rnorm(50))
cauchy.test("T2", rnorm(50))
cauchy.test("T2", rnorm(50))
cauchy.test("T2", rnorm(50))
cauchy.test("T2", rnorm(50))
cauchy.test("T2", rnorm(50))
cauchy.test("T2", rnorm(50))
cauchy.test("T2", rgamma(50))
cauchy.test("T2", rgamma(50,1))
cauchy.test("T2", rgamma(50,1))
cauchy.test("T3", rgamma(50,1))
cauchy.test("T2", rgamma(50,1))
cauchy.test("T2", rgamma(50,1))
cauchy.test("T2", 1:50)
cauchy.test("T2", rep(1,50))
quantile_T2_ML[3,1]
cauchy.test("T2", rep(1,50))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rcauchy(20))$decision
cauchy.test("T2", rt(20,20)$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$decision
cauchy.test("T2", rt(20,20))$
cauchy.test("T2", rt(20,20))
cauchy.test("T2", rt(20,20))
cauchy.test("T2", rt(20,20))
cauchy.test("T2", rt(20,20))
cauchy.test("T2", rt(20,20))
cauchy.test("T2", rt(20,20))
cauchy.test("T2", rt(20,20))
cauchy.test("T2", rt(20,20))
cauchy.test("T2", rt(20,20))
cauchy.test("T2", rt(20,20))
testentscheid(20,x=rt(20,20),method="D2_ML 0.025")
testentscheid(20,x=rt(20,20),method="T2_ML 0.025")
testentscheid(20,x=rt(20,20),method="T2_ML 0.025")
testentscheid(20,x=rt(20,20),method="T2_ML 0.025")
testentscheid(20,x=rt(20,20),method="T2_ML 0.025")
testentscheid(20,x=rt(20,20),method="T2_ML 0.025")
testentscheid(20,x=rt(20,20),method="T2_ML 0.025")
testentscheid(20,x=rt(20,20),method="T2_ML 0.025")
testentscheid(20,x=rt(20,20),method="T2_ML 0.025")
testentscheid(20,x=rt(20,20),method="T2_ML 0.025")
testentscheid(20,x=rt(20,20),method="T2_ML 0.025")
testentscheid(20,x=rt(20,20),method="T2_ML 0.025")
testentscheid(20,x=rt(20,20),method="T2_ML 0.025")
testentscheid(20,x=rcauchy(20,20),method="T2_ML 0.025")
testentscheid(20,x=rcauchy(20,20),method="T2_ML 0.025")
testentscheid(20,x=rcauchy(20,20),method="T2_ML 0.025")
testentscheid(20,x=rcauchy(20,20),method="T2_ML 0.025")
testentscheid(20,x=rcauchy(20,20),method="T2_ML 0.025")
testentscheid(20,x=rcauchy(20,20),method="T2_ML 0.025")
testentscheid(20,x=rcauchy(20,20),method="T2_ML 0.025")
testentscheid(20,x=rcauchy(20,20),method="T2_ML 0.025")
testentscheid(20,x=rcauchy(20,20),method="T2_ML 0.025")
testentscheid(20,x=rnorm(50),method="T2_ML 0.025")
testentscheid(20,x=rnorm(50),method="T2_ML 0.025")
testentscheid(20,x=rnorm(50),method="T2_ML 0.025")
testentscheid(20,x=rcauchy(50),method="T2_ML 0.025")
testentscheid(20,x=rcauchy(50),method="T2_ML 0.025")
testentscheid(20,x=rcauchy(50),method="T2_ML 0.025")
testentscheid(20,x=rcauchy(50),method="T3_ML 5")
testentscheid(20,x=rcauchy(50),method="T3_ML 5")
testentscheid(20,x=rcauchy(50),method="T3_ML 5")
testentscheid(20,x=rcauchy(50),method="T3_ML 5")
testentscheid(20,x=rcauchy(50),method="T3_ML 5")
testentscheid(20,x=rcauchy(50),method="T3_ML 5")
testentscheid(20,x=rcauchy(50),method="T3_ML 5")
testentscheid(20,x=rcauchy(50),method="T3_ML 5")
testentscheid(20,x=rcauchy(50),method="T3_ML 5")
testentscheid(20,x=rcauchy(50),method="T3_ML 5")
testentscheid(20,x=rcauchy(50),method="T3_ML 5")
testentscheid(20,x=rcauchy(50),method="T3_ML 5")
testentscheid(20,x=rnorm(50),method="T3_ML 5")
quantile_T3_Median
load("/Users/lucasbutsch/Documents/ILIAS/Bachelorarbeit/Server Daten/Quantile_12.07.2019/quantile_T3_Median.RData")
View(quantile_T3_Median)
n_grid <- c(10,20,50)
method_grid <- c("T2_ML 0.025","T2_ML 0.1","T2_ML 0.5","T2_ML","T2_ML 2.5","T2_ML 5","T2_ML 10")
verteilung_grid <- c("C(0,1)","N(0,1)","NC(0.1,0.9)","NC(0.3,0.7)","NC(0.5,0.5)","NC(0.7,0.3)","NC(0.9,0.1)","t(2)","t(3)","t(4)","t(5)","t(7)","t(10)","Stable(0.5,0)","Stable(1.2,0)","Stable(1.5,0)","Stable(1.7,0)","Stable(1.9,0)","Stable(0.5,-1)","Stable(1.5,-1)","Stable(2,-1)","Stable(0.5,1)","Stable(1.5,1)","Stable(2,1)","Tukey(1)","Tukey(0.2)","Tukey(0.1)","Tukey(0.05)","U(0,1)","Logistic","Laplace","Gumbel")
param_list=list("n"=n_grid, "Verteilung"=verteilung_grid,"method"=method_grid)
n_grid <- c(10)
method_grid <- c("T4_ML 10")
verteilung_grid <- c("C(0,1)","N(0,1)")
param_list=list("n"=n_grid, "Verteilung"=verteilung_grid,"method"=method_grid)
y <- MonteCarlo(func=testentscheid, nrep=1000, param_list=param_list,ncpus=5)
y <- MonteCarlo::MonteCarlo(func=testentscheid, nrep=1000, param_list=param_list,ncpus=5)
library(MonteCarlo)
y <- MonteCarlo(func=testentscheid, nrep=1000, param_list=param_list,ncpus=5)
mean(rep(testentscheid(20,Verteilung = "C(0,1)" ,method = "T3_ML 5"),1000))
A <- rep(testentscheid(20,Verteilung = "C(0,1)" ,method = "T3_ML 5"),1000)
A
sum(A)
unlist(A)
mean(unlist(A[,2])
)
unlist(A[,2])
unlist(A[,1])
unlist(A[2])
unname(unlist(A[2]))
mean(unname(unlink(A)))
mean(unname(unlinst(testentscheid(20,Verteilung = "C(0,1)" ,method = "T3_ML 5"),1000)))
mean(unname(unlist(testentscheid(20,Verteilung = "C(0,1)" ,method = "T3_ML 5"),1000)))
mean(unname(unlist(testentscheid(20,Verteilung = "C(0,1)" ,method = "T3_ML 5"),10000)))
mean(unname(unlist(testentscheid(20,Verteilung = "C(0,1)" ,method = "T2_ML 0.0255"),10000)))
mean(unname(unlist(testentscheid(20,Verteilung = "C(0,1)" ,method = "T2_ML 0.025"),10000)))
mean(unname(unlist(testentscheid(20,Verteilung = "C(0,1)" ,method = "T2_ML 0.025"),10000)))
mean(unname(unlist(testentscheid(20,Verteilung = "C(0,1)" ,method = "T2_ML 0.025"),10000)))
mean(unname(unlist(testentscheid(20,Verteilung = "C(0,1)" ,method = "T2_ML 0.025"),10000)))
mean(unname(unlist(testentscheid(20,Verteilung = "C(0,1)" ,method = "T2_ML 0.025"),10000)))
mean(unname(unlist(testentscheid(20,Verteilung = "N(0,1)" ,method = "T2_ML 0.025"),10000)))
mean(unname(unlist(testentscheid(20,Verteilung = "N(0,1)" ,method = "T2_ML 0.025"),10000)))
mean(unname(unlist(testentscheid(20,Verteilung = "N(0,1)" ,method = "D"),10000)))
library(tfc)
